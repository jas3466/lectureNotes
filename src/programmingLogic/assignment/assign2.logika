//Thurs Oct 20 --> we'll do this one on Tues Oct 25

import org.sireum.logika._

var num: Z = readInt("Enter positive number: ")
val orig: Z = num

//assume user input really was positive
assume(num > 0)

num = num * 2

//first logic block - after first change to a variable
l"""{
    1. orig == num_old                  premise
    2. num == num_old * 2               premise
    3. num_old > 0                      premise
    4. num >= 0                         algebra 2 3
    5. 2 > 0                            algebra
    6. num % 2 == 0                     algebra 2
    7. 2*orig == num                    algebra 1 2
}"""

//assert that num is even
assert(num % 2 == 0)

num = num + 2

//next variable change, so next logic block goes here

l"""{
    1. num == num_old + 2               premise
    2. num_old % 2 == 0                 premise //num was even before adding 2
    3. num_old >= 0                     premise //old num was not negative
    4. num >= 0                         algebra 1 3
    5. num % 2 == 0                     algebra 1 2
    7. 2 != 0                           algebra //for the division in the code
    8. 2*orig == num_old                premise
    9. 2*orig == num - 2                algebra 1 8
}"""

//assert that num is still even
assert(num % 2 == 0)

num = num/2 - 1

l"""{
    1. num == num_old/2 - 1             premise //from the most recent assignment
    2. 2*orig == num_old - 2            premise
    3. num + 1 == num_old/2             algebra 1
    4. num_old % 2 == 0                 premise //old value of num was even
    5. 2*(num + 1) == num_old           algebra 3 4
    6. 2*num + 2 == num_old             algebra 5
    7. 2*orig == 2*num+2 - 2            subst2 6 2
    8. 2*orig == 2*num                   algebra 7
    9. num == orig                      algebra 8
}"""

assert(num == orig)

//suppose num = 3
//num = 6 after the first update
//num = 8 after second update
//num = 3 after third update

/*
write a program that:

- gets a positive input number (and also saves it to an orig val)
- multiplies the input number by 2
        - (the number should be even now)

- adds 2 to the running total
        - (the number should still be even)

- divides the result by 2 and subtract 1
        - (the number should be back to the original)

Example: suppose input is 3

First: write all asserts (what should be true after each step)

Next: add necessary logic blocks
*/