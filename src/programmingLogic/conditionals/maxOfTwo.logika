//Tues Oct 25

import org.sireum.logika._

var x: Z = readInt()
var y: Z = readInt()

var max: Z = 0

//how would we update max to be the biggest of x and y?


if (x > y) {
    max = x

    l"""{
        1. x > y                premise //condition is true
        2. max == x             premise //assignment statement
        3. max >= x             algebra 2 //building to assert
        4. max >= y             algebra 1 3

        //wanted: max >= x & max >= y & (max == x | max == y)
    }"""

} else {
    max = y

    l"""{
        1. !(x > y)             premise //condition is false
        2. x <= y               algebra 1
        3. max == y             premise //assignment statement
        4. max >= x             algebra 2 3
        5. max >= y             algebra 3
    }"""
}

//put any claim that was made in both branches
l"""{
    1. max >= x                 premise //true in both branches
    2. max >= y                 premise //true in both branches
    3. max == x V max == y      premise //left side was true in if, right side true in else
    4. max >= x ^ max >= y      ^i 1 2
    5. max >= x ^ max >= y ^ (max == x V max == y)      ^i 4 3
}"""

//we WANT max to correctly be the biggest between x and y
println("Biggest number is: ", max)

assert(max >= x & max >= y & (max == x | max == y))



//what do we want to be able to assert to know our program worked?